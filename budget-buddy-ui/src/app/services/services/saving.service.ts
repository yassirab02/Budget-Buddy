/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { calculateAndSaveSavings } from '../fn/saving/calculate-and-save-savings';
import { CalculateAndSaveSavings$Params } from '../fn/saving/calculate-and-save-savings';
import { findAllSavingsByUser } from '../fn/saving/find-all-savings-by-user';
import { FindAllSavingsByUser$Params } from '../fn/saving/find-all-savings-by-user';
import { findSavingByMonth } from '../fn/saving/find-saving-by-month';
import { FindSavingByMonth$Params } from '../fn/saving/find-saving-by-month';
import { PageResponseSavingResponse } from '../models/page-response-saving-response';
import { SavingResponse } from '../models/saving-response';

@Injectable({ providedIn: 'root' })
export class SavingService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `calculateAndSaveSavings()` */
  static readonly CalculateAndSaveSavingsPath = '/saving/calc-savings';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `calculateAndSaveSavings()` instead.
   *
   * This method doesn't expect any request body.
   */
  calculateAndSaveSavings$Response(params?: CalculateAndSaveSavings$Params, context?: HttpContext): Observable<StrictHttpResponse<SavingResponse>> {
    return calculateAndSaveSavings(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `calculateAndSaveSavings$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  calculateAndSaveSavings(params?: CalculateAndSaveSavings$Params, context?: HttpContext): Observable<SavingResponse> {
    return this.calculateAndSaveSavings$Response(params, context).pipe(
      map((r: StrictHttpResponse<SavingResponse>): SavingResponse => r.body)
    );
  }

  /** Path part for operation `findSavingByMonth()` */
  static readonly FindSavingByMonthPath = '/saving/find-by-month/{month}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `findSavingByMonth()` instead.
   *
   * This method doesn't expect any request body.
   */
  findSavingByMonth$Response(params: FindSavingByMonth$Params, context?: HttpContext): Observable<StrictHttpResponse<SavingResponse>> {
    return findSavingByMonth(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `findSavingByMonth$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  findSavingByMonth(params: FindSavingByMonth$Params, context?: HttpContext): Observable<SavingResponse> {
    return this.findSavingByMonth$Response(params, context).pipe(
      map((r: StrictHttpResponse<SavingResponse>): SavingResponse => r.body)
    );
  }

  /** Path part for operation `findAllSavingsByUser()` */
  static readonly FindAllSavingsByUserPath = '/saving/all-savings';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `findAllSavingsByUser()` instead.
   *
   * This method doesn't expect any request body.
   */
  findAllSavingsByUser$Response(params?: FindAllSavingsByUser$Params, context?: HttpContext): Observable<StrictHttpResponse<PageResponseSavingResponse>> {
    return findAllSavingsByUser(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `findAllSavingsByUser$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  findAllSavingsByUser(params?: FindAllSavingsByUser$Params, context?: HttpContext): Observable<PageResponseSavingResponse> {
    return this.findAllSavingsByUser$Response(params, context).pipe(
      map((r: StrictHttpResponse<PageResponseSavingResponse>): PageResponseSavingResponse => r.body)
    );
  }

}
